// 1. Multiples of 3 or 5
// If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

// Find the sum of all the multiples of 3 or 5 below 1000.

function multiplesOf3and5(number) {
	let sum = 0;
	for (let i = 1; i < number; i++) {
		if (i % 3 === 0 || i % 5 === 0) {
			sum += i;
		}
	}
	return sum;
}

// console.log(multiplesOf3and5(1000));

// 2. Even Fibonacci numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

function fiboEvenSum(n) {
	let sum = 2;
	let num1 = 1;
	let num2 = 2;

	while (num1 + num2 <= n) {
		let num3 = num1 + num2;
		if (num3 % 2 === 0) {
			sum += num3;
		}
		num1 = num2;
		num2 = num3;
	}
	return sum;
}

console.log(fiboEvenSum(4000000));
